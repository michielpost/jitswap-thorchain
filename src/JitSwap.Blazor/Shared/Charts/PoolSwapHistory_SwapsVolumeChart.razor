@using CommunityToolkit.Mvvm.ComponentModel;
@using Midgard;
@using ApexCharts;
@inherits MvvmComponentBase<MainViewModel>

<DataLoaderProgress DataLoader="BindingContext.PoolSwapHistoryVM.DataLoader" />
@if (BindingContext.PoolSwapHistoryVM.DataLoader.LoadingState != LoadingState.Finished) return;
@if (BindingContext.PoolSwapHistoryVM.Data?.Intervals == null) return;


<ApexChart @ref="chart"
           TItem="SwapHistoryItem"
           XAxisType="XAxisType.Datetime"
           Options="options"
           Title="@($"{BindingContext.SelectedAsset} Swap Volume")">

    <ApexPointSeries TItem="SwapHistoryItem"
                     Items="BindingContext.PoolSwapHistoryVM.Data!.Intervals"
                     Name="@($"to {BindingContext.SelectedAsset}")"
                     SeriesType="SeriesType.Line"
                     XValue="@(e => DateTimeOffset.FromUnixTimeSeconds(Convert.ToInt64(e.StartTime)))"
                     YAggregate="@(e => e.Sum(e => Convert.ToInt64(e.ToAssetVolume) / 100000000 * Convert.ToDecimal(e.RunePriceUSD)))"
                     OrderBy="e=>e.X" />

    <ApexPointSeries TItem="SwapHistoryItem"
                     Items="BindingContext.PoolSwapHistoryVM.Data!.Intervals"
                     Name="to RUNE"
                     SeriesType="SeriesType.Line"
                     XValue="@(e => DateTimeOffset.FromUnixTimeSeconds(Convert.ToInt64(e.StartTime)))"
                     YAggregate="@(e => e.Sum(e => Convert.ToInt64(e.ToRuneVolume) / 100000000 * Convert.ToDecimal(e.RunePriceUSD)))"
                     OrderBy="e=>e.X" />

    <ApexPointSeries TItem="SwapHistoryItem"
                     Items="BindingContext.PoolSwapHistoryVM.Data!.Intervals"
                     Name="SynthMintVolume"
                     SeriesType="SeriesType.Line"
                     XValue="@(e => DateTimeOffset.FromUnixTimeSeconds(Convert.ToInt64(e.StartTime)))"
                     YAggregate="@(e => e.Sum(e => Convert.ToInt64(e.SynthMintVolume) / 100000000 * Convert.ToDecimal(e.RunePriceUSD)))"
                     OrderBy="e=>e.X" />

    <ApexPointSeries TItem="SwapHistoryItem"
                     Items="BindingContext.PoolSwapHistoryVM.Data!.Intervals"
                     Name="SynthRedeemVolume"
                     SeriesType="SeriesType.Line"
                     XValue="@(e => DateTimeOffset.FromUnixTimeSeconds(Convert.ToInt64(e.StartTime)))"
                     YAggregate="@(e => e.Sum(e => Convert.ToInt64(e.SynthRedeemVolume) / 100000000 * Convert.ToDecimal(e.RunePriceUSD)))"
                     OrderBy="e=>e.X" />


   

</ApexChart>


@code {

    private ApexChart<SwapHistoryItem>? chart;
    private ApexChartOptions<SwapHistoryItem> options = ChartConfig.GetDefaultChartOptions<SwapHistoryItem>();

    protected override void OnInitialized()
    {
        options.Yaxis = new List<YAxis>();
        options.Yaxis.Add(new YAxis
            {
                Labels = new YAxisLabels
                {
                    Formatter = @"function (value) {
                    return '$' + Number(value).toLocaleString();}"
                }
            }
        );
        options.Chart = new Chart { Group = "dateSync" };

        WatchDataLoaderVM(BindingContext.PoolSwapHistoryVM);

        base.OnInitialized();
    }

    protected override async Task ChartRenderAsync()
    {
        if (chart != null && BindingContext.PoolSwapHistoryVM.Data?.Intervals != null)
            await chart.RenderAsync();

        await base.ChartRenderAsync();
    }
}
