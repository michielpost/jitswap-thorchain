@using CommunityToolkit.Mvvm.ComponentModel;
@using Midgard;
@inherits MvvmComponentBase<MainViewModel>

<DataLoaderProgress DataLoader="BindingContext.PoolLiquidityHistoryDataLoader" />
@if (BindingContext.PoolLiquidityHistoryDataLoader.LoadingState != LoadingState.Finished) return;


<ApexChart TItem="LiquidityHistoryItem"
           XAxisType="XAxisType.Datetime"
           Options="options"
           Title="@($"{BindingContext.SelectedAsset} Swap Totals")">

    <ApexPointSeries TItem="LiquidityHistoryItem"
                     Items="BindingContext.PoolLiquidityHistory!.Intervals"
                     Name="add count"
                     SeriesType="SeriesType.Line"
                     XValue="@(e => DateTimeOffset.FromUnixTimeSeconds(Convert.ToInt64(e.StartTime)))"
                     YAggregate="@(e => e.Sum(e => Convert.ToInt64(e.AddLiquidityCount)))"
                     OrderBy="e=>e.X" />


    <ApexPointSeries TItem="LiquidityHistoryItem"
                     Items="BindingContext.PoolLiquidityHistory!.Intervals"
                     Name="withdraw count"
                     SeriesType="SeriesType.Line"
                     XValue="@(e => DateTimeOffset.FromUnixTimeSeconds(Convert.ToInt64(e.StartTime)))"
                     YAggregate="@(e => e.Sum(e => Convert.ToInt64(e.WithdrawCount)))"
                     OrderBy="e=>e.X" />



</ApexChart>


@code {

    private ApexChartOptions<LiquidityHistoryItem> options = ChartConfig.GetDefaultChartOptions<LiquidityHistoryItem>();

    protected override void OnInitialized()
    {
        options.Yaxis = new List<YAxis>();
        options.Yaxis.Add(new YAxis
        {
            Title = new AxisTitle { Text = "Count" },
            Opposite = true,
                Labels = new YAxisLabels
                {
                    Formatter = @"function (value) {
                    return Number(value).toLocaleString();}"
                }
        });
     

        options.Chart = new Chart { Group = "dateSync" };

        base.OnInitialized();
    }
}
